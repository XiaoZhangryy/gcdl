% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_inv_gram.R
\name{calculate_inv_gram}
\alias{calculate_inv_gram}
\title{Calculate Inverse Gram Matrix}
\usage{
calculate_inv_gram(x, G, k = NULL)
}
\arguments{
\item{x}{The design matrix, which is an \code{n} by \code{p} matrix, where \code{n} is the number of observations and \code{p} is the number of predictors.}

\item{G}{User-specified graph structure matrix. \code{G[i, j]} indicates the presence of an edge between nodes \code{i} and \code{j}.}

\item{k}{Integer. When the degrees of freedom of the vertex \code{j} are less than \code{k}, use ordinary least squares; otherwise, use Lasso. Default is \code{NULL}, which means \code{k} is set to \code{p}.}
}
\value{
A list containing:
\itemize{
  \item \code{inverse_Gram} - The approximate inverse of the matrix \eqn{x^\top x/n}.
  \item \code{Z} - The residuals of the nodewise regressions.
}
}
\description{
Utilizes the graph structure to compute the approximate inverse of the Gram matrix \eqn{x^\top x/n}. This function performs nodewise regression using either ordinary least squares (OLS) or Lasso, depending on the degrees of freedom of the vertices.
}
\examples{
set.seed(0)
data <- simu_data(200, 20, 9)
x <- data$x
G <- data$G
inv_gram <- calculate_inv_gram(x, G)
print(inv_gram$inverse_Gram)
print(inv_gram$Z)
}
